datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                String   @id @default(uuid())
  email             String   @unique
  passwordHash      String
  firstName         String?
  lastName          String?
  phone             String?  // <-- New field for user phone number
  totpSecret        String?
  is2faEnabled      Boolean  @default(false)
  emailConfirmed    Boolean  @default(false)
  confirmationToken String?
  createdAt         DateTime @default(now())
  publicKey         String?
  avatarUrl         String?  // <-- New field for user avatar
  messages          Message[] @relation("msg_sender")
  received          Message[] @relation("msg_receiver")
  threads           Thread[] @relation("ThreadParticipants")
}

model Message {
  id          Int      @id @default(autoincrement())
  sender      User     @relation("msg_sender", fields: [senderId], references: [id])
  senderId    String
  receiver    User     @relation("msg_receiver", fields: [receiverId], references: [id])
  receiverId  String
  thread      Thread   @relation(fields: [threadId], references: [id])
  threadId    Int
  threadLastMessage Thread? @relation("ThreadLastMessage")
  ciphertext  String
  nonce       String
  createdAt   DateTime @default(now())
}

model Thread {
  id           Int       @id @default(autoincrement())
  title        String
  participants User[]    @relation("ThreadParticipants")
  messages     Message[]
  lastMessage  Message?  @relation("ThreadLastMessage", fields: [lastMessageId], references: [id])
  lastMessageId Int? @unique
  updatedAt    DateTime  @updatedAt
  createdAt    DateTime  @default(now())
}